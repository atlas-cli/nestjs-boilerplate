"use strict";(self.webpackChunknestjs_i18n=self.webpackChunknestjs_i18n||[]).push([[699],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||o;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"QueryResolver")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"['lang']"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"HeaderResolver")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AcceptLanguageResolver")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{matchType: 'strict-loose'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CookieResolver")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"lang"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GraphQLWebsocketResolver")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"N/A"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GrpcMetadataResolver")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"['lang']"))))))}i.isMDXComponent=!0;const l={sidebar_position:2},s="Quickstart",p={unversionedId:"quick-start",id:"quick-start",title:"Quickstart",description:"In this quick start you'll learn how to do a basic i18n setup.",source:"@site/docs/quick-start.mdx",sourceDirName:".",slug:"/quick-start",permalink:"/quick-start",draft:!1,editUrl:"https://github.com/toonvanstrijp/nestjs-i18n/tree/main/docs/quick-start.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Welcome",permalink:"/"},next:{title:"Formatting",permalink:"/guides/formatting"}},d={},u=[{value:"Installation",id:"installation",level:2},{value:"Setup translation files",id:"setup-translation-files",level:2},{value:"Module setup",id:"module-setup",level:2},{value:"Add resolvers",id:"add-resolvers",level:2},{value:"Translate stuff \ud83c\udf89",id:"translate-stuff-",level:2}],m={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,"In this quick start you'll learn how to do a basic i18n setup."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save nestjs-i18n\n")),(0,r.kt)("h2",{id:"setup-translation-files"},"Setup translation files"),(0,r.kt)("p",null,"By default ",(0,r.kt)("inlineCode",{parentName:"p"},"nestjs-i18n")," uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"I18nJsonLoader")," loader class. This loader reads translations from ",(0,r.kt)("inlineCode",{parentName:"p"},"json")," files. Create a folder named ",(0,r.kt)("inlineCode",{parentName:"p"},"i18n")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src")," folder of your project. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"package.json\npackage-lock.json\n...\nsrc\n\u2514\u2500\u2500 i18n\n    \u251c\u2500\u2500 en\n    \u2502\xa0\xa0 \u251c\u2500\u2500 events.json\n    \u2502\xa0\xa0 \u2514\u2500\u2500 test.json\n    \u2514\u2500\u2500 nl\n \xa0\xa0     \u251c\u2500\u2500 events.json\n \xa0\xa0     \u2514\u2500\u2500 test.json\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="src/i18n/en/test.json"',title:'"src/i18n/en/test.json"'},'{\n  "HELLO": "Hello",\n  "PRODUCT": {\n    "NEW": "New Product: {name}"\n  },\n  "ENGLISH": "English",\n  "ARRAY": ["ONE", "TWO", "THREE"],\n  "cat": "Cat",\n  "cat_name": "Cat: {name}",\n  "set-up-password": {\n    "heading": "Hello, {username}",\n    "title": "Forgot password",\n    "followLink": "Please follow the link to set up your password"\n  },\n  "day_interval": {\n    "one": "Every day",\n    "other": "Every {count} days",\n    "zero": "Never"\n  },\n  "nested": "We go shopping: $t(test.day_interval, {{\\"count\\": {count} }})"\n}\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"i18n")," folder isn't automatically copied to your ",(0,r.kt)("inlineCode",{parentName:"p"},"dist")," folder during the build process. To enable ",(0,r.kt)("inlineCode",{parentName:"p"},"nestjs")," to do this modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"compilerOptions")," inside ",(0,r.kt)("inlineCode",{parentName:"p"},"nest-cli.json"),"."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="nest-cli.json"',title:'"nest-cli.json"'},'{\n  "collection": "@nestjs/schematics",\n  "sourceRoot": "src",\n  "compilerOptions": {\n    "assets": [\n      { "include": "i18n/**/*", "watchAssets": true }\n    ]\n  }\n}\n'))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"When using a monorepo structure don't forget to set the ",(0,r.kt)("inlineCode",{parentName:"p"},"outDir")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="nest-cli.json"',title:'"nest-cli.json"'},'{\n  "collection": "@nestjs/schematics",\n  "sourceRoot": "src",\n  "compilerOptions": {\n    "assets": [\n      { \n        "include": "i18n/**/*", \n        "watchAssets": true, \n+        "outDir": "dist/apps/api" \n      }\n    ]\n  }\n}\n'))),(0,r.kt)("h2",{id:"module-setup"},"Module setup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/app.module.ts"',title:'"src/app.module.ts"'},"import { Module } from '@nestjs/common';\nimport * as path from 'path';\nimport { I18nModule } from 'nestjs-i18n';\n\n@Module({\n  imports: [\n    I18nModule.forRoot({\n      fallbackLanguage: 'en',\n      loaderOptions: {\n        path: path.join(__dirname, '/i18n/'),\n        watch: true,\n      },\n    }),\n  ],\n  controllers: [],\n})\nexport class AppModule {}\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"I18nModule")," is a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.nestjs.com/modules#global-modules"},(0,r.kt)("strong",{parentName:"a"},"global"))," module. This means you'll only need to register the module once (in the root module). After that it's accessible throughout the whole application.")),(0,r.kt)("admonition",{title:"Live reloading \ud83c\udf89",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"watch")," option to ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"true"))," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"loaderOptions")," enables live reloading \ud83c\udf89.")),(0,r.kt)("h2",{id:"add-resolvers"},"Add resolvers"),(0,r.kt)("p",null,"Resolvers are used for getting the current language of our request. In basic web applications this is done via the ",(0,r.kt)("inlineCode",{parentName:"p"},"Accept-Language")," header. But in many cases you want to override this language by your logged in user settings, or some header you define yourself."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"nestjs-i18n")," comes with a set of built-in resolvers."),(0,r.kt)(i,{mdxType:"Resolvers"}),(0,r.kt)("p",null,"To add resolvers add them to the ",(0,r.kt)("inlineCode",{parentName:"p"},"resolvers")," array in your ",(0,r.kt)("inlineCode",{parentName:"p"},"I18nModule")," options. The way ",(0,r.kt)("inlineCode",{parentName:"p"},"nestjs-i18n")," works it's going to resolve the language in order. So in this case it tries the ",(0,r.kt)("inlineCode",{parentName:"p"},"QueryResolver")," first, if it can't resolve a language it'll jump to the next one."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/app.module.ts"',title:'"src/app.module.ts"'},"import { Module } from '@nestjs/common';\nimport * as path from 'path';\nimport {\n  AcceptLanguageResolver,\n  I18nJsonLoader,\n  I18nModule,\n  QueryResolver,\n} from 'nestjs-i18n';\n\n@Module({\n  imports: [\n    I18nModule.forRoot({\n      fallbackLanguage: 'en',\n      loaderOptions: {\n        path: path.join(__dirname, '/i18n/'),\n        watch: true,\n      },\n      resolvers: [\n        { use: QueryResolver, options: ['lang'] },\n        AcceptLanguageResolver,\n      ],\n    }),\n  ],\n  controllers: [],\n})\nexport class AppModule {}\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"It's possible to create your own ",(0,r.kt)("strong",{parentName:"p"},"resolvers"),"! For example if you want to resolve the language from your logged-in user's settings. Please see the ",(0,r.kt)("a",{parentName:"p",href:"/concepts/resolver"},(0,r.kt)("strong",{parentName:"a"},"resolvers"))," page for instructions.")),(0,r.kt)("h2",{id:"translate-stuff-"},"Translate stuff \ud83c\udf89"),(0,r.kt)("p",null,"Now that we've setup everything we can start to do translations! The easiest way to do this is in your ",(0,r.kt)("inlineCode",{parentName:"p"},"controller"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/app.controller.ts"',title:'"src/app.controller.ts"'},"import { Controller, Get } from '@nestjs/common';\nimport { I18n, I18nContext } from 'nestjs-i18n';\n\n@Controller()\nexport class AppController {\n  @Get()\n  async getHello(@I18n() i18n: I18nContext) {\n    return await i18n.t('test.HELLO');\n  }\n}\n")))}c.isMDXComponent=!0}}]);
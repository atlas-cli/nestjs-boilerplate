import { I18nContext } from '../i18n.context';
import { I18nOptionResolver } from '../interfaces/i18n-options.interface';
import { ArgumentsHost } from '@nestjs/common';
import { ValidationArguments, ValidationError } from 'class-validator';
import { I18nValidationError, I18nValidationException } from '../interfaces/i18n-validation-error.interface';
import { I18nService, TranslateOptions } from '../services/i18n.service';
export declare function shouldResolve(e: I18nOptionResolver): any;
export declare function getI18nContextFromRequest(req: any): I18nContext;
export declare function getI18nServiceFromGraphQLContext(graphqlContext: any): I18nContext;
export declare function getI18nServiceFromRpcContext(rpcContext: any): I18nContext;
export declare function getI18nContextFromArgumentsHost(ctx: ArgumentsHost): I18nContext;
export declare function i18nValidationErrorFactory(errors: ValidationError[]): I18nValidationException;
export declare function i18nValidationMessage(key: string, args?: any): (a: ValidationArguments) => string;
export declare function formatI18nErrors(errors: I18nValidationError[], i18n: I18nService, options?: TranslateOptions): I18nValidationError[];
